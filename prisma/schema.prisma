generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["ReferentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  // The unique identifier for the account
  id                String   @id @default(cuid())
  // The user associated with the account
  userId            String
  // The type of account (e.g. "google", "facebook")
  type              String
  // The provider of the account (e.g. "google", "facebook")
  provider          String
  // The unique identifier for the account on the provider's side
  providerAccountId String
  // The refresh token for the account, if applicable
  refresh_token     String?  @db.Text
  // The access token for the account, if applicable
  access_token      String?  @db.Text
  // The expiration time for the access token, if applicable
  expires_at        Int?
  // The type of token, if applicable
  token_type        String?
  // The scope of the token, if applicable
  scope             String?
  // The ID token for the account, if applicable
  id_token          String?  @db.Text
  // The session state for the account, if applicable
  session_state     String?
  // The user associated with the account
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  // The unique combination of provider and providerAccountId
  @@unique([provider, providerAccountId])
}

// A session for a user
model Session {
  // The unique identifier for the session
  id           String   @id @default(cuid())
  // The session token, used for authentication
  sessionToken String   @unique
  // The user associated with the session
  userId       String
  // The expiration time for the session
  expires      DateTime
  // The user associated with the session
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// A user of the system
model User {
  // The unique identifier for the user
  id             String    @id @default(cuid())
  // The name of the user
  name           String?
  // The email address of the user
  email          String?   @unique
  // The time the user's email was verified, if applicable
  emailVerified  DateTime?
  // The URL of the user's profile picture
  image          String?
  // The role of the user (e.g. "admin")
  role           Role?
  // The subscription ID for the user, if applicable
  subscriptionId String?   @db.Text
  // The customer ID for the user
